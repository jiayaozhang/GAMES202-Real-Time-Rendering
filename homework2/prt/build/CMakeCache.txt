# This is the CMakeCache file.
# For build in directory: f:/GAMES202/Assignment2/prt/build
# It was generated by CMake: D:/cmake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build shared libraries
BUILD_SHARED_LIBS:BOOL=OFF

//ASM_MASM compiler
CMAKE_ASM_MASM_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.28.29910/bin/Hostx64/x64/ml64.exe

//Flags used by the ASM_MASM compiler during all build types.
CMAKE_ASM_MASM_FLAGS:STRING=

//Flags used by the ASM_MASM compiler during DEBUG builds.
CMAKE_ASM_MASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM_MASM compiler during MINSIZEREL builds.
CMAKE_ASM_MASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM_MASM compiler during RELEASE builds.
CMAKE_ASM_MASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM_MASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO:STRING=

//For backwards compatibility, what version of CMake commands and
// syntax should this version of CMake try to support.
CMAKE_BACKWARDS_COMPATIBILITY:STRING=2.4

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/nori

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.28.29910/bin/Hostx64/x64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/x64/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=nori

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/x64/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=OFF

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=OFF

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=OFF

//Enable to build 7-Zip packages
CPACK_BINARY_7Z:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=ON

//Enable to build NuGet packages
CPACK_BINARY_NUGET:BOOL=OFF

//Enable to build WiX packages
CPACK_BINARY_WIX:BOOL=OFF

//Enable to build ZIP packages
CPACK_BINARY_ZIP:BOOL=OFF

//Single output directory for building all executables.
EXECUTABLE_OUTPUT_PATH:PATH=

//Value Computed by CMake
GLFW_BINARY_DIR:STATIC=F:/GAMES202/Assignment2/prt/build/ext_build/nanogui/ext/glfw

//Build the GLFW documentation
GLFW_BUILD_DOCS:BOOL=OFF

//Build the GLFW example programs
GLFW_BUILD_EXAMPLES:BOOL=OFF

// 
GLFW_BUILD_INSTALL:BOOL=OFF

//Build the GLFW test programs
GLFW_BUILD_TESTS:BOOL=OFF

//Generate installation target
GLFW_INSTALL:BOOL=OFF

//Value Computed by CMake
GLFW_SOURCE_DIR:STATIC=F:/GAMES202/Assignment2/prt/ext/nanogui/ext/glfw

// 
GLFW_USE_CHDIR:BOOL=OFF

//Force use of high-performance GPU on hybrid systems
GLFW_USE_HYBRID_HPG:BOOL=OFF

//Assume the Vulkan loader is linked with the application
GLFW_VULKAN_STATIC:BOOL=OFF

//Build Shared Libraries
ILMBASE_BUILD_SHARED_LIBS:BOOL=OFF

//Namespace Versioning
ILMBASE_NAMESPACE_VERSIONING:BOOL=OFF

//Build IlmBase tests?
ILMIMF_BUILD_TESTS:BOOL=OFF

//Create libtool files?
ILMIMF_CREATE_LIBTOOL_FILE:BOOL=OFF

//Install pkgconfig files?
ILMIMF_INSTALL_PKGCONFIG:BOOL=OFF

//Installation directory for executables
INSTALL_BIN_DIR:PATH=C:/Program Files (x86)/nori/bin

//Installation directory for headers
INSTALL_INC_DIR:PATH=C:/Program Files (x86)/nori/include

//Installation directory for libraries
INSTALL_LIB_DIR:PATH=C:/Program Files (x86)/nori/lib

//Installation directory for manual pages
INSTALL_MAN_DIR:PATH=C:/Program Files (x86)/nori/share/man

//Installation directory for pkgconfig (.pc) files
INSTALL_PKGCONFIG_DIR:PATH=C:/Program Files (x86)/nori/share/pkgconfig

//Dependencies for the target
IexMath_LIB_DEPENDS:STATIC=general;Iex;

//Dependencies for the target
IlmImf_LIB_DEPENDS:STATIC=general;Half;general;Iex;general;Imath;general;IlmThread;general;zlib;

//Dependencies for the target
IlmThread_LIB_DEPENDS:STATIC=general;Iex;

//Dependencies for the target
Imath_LIB_DEPENDS:STATIC=general;Iex;

//Single output directory for building all libraries.
LIBRARY_OUTPUT_PATH:PATH=

// 
NANOGUI_BACKEND:BOOL=OpenGL

//Build NanoGUI example application?
NANOGUI_BUILD_EXAMPLES:BOOL=OFF

//Build GLAD OpenGL loader library? (needed on Windows)
NANOGUI_BUILD_GLAD:BOOL=ON

//Build GLFW?
NANOGUI_BUILD_GLFW:BOOL=ON

//Build a Python plugin for NanoGUI?
NANOGUI_BUILD_PYTHON:BOOL=OFF

//Build NanoGUI as a shared library?
NANOGUI_BUILD_SHARED:BOOL=OFF

//Install NanoGUI on `make install`?
NANOGUI_INSTALL:BOOL=ON

//Build OpenEXR examples?
OPENEXR_BUILD_EXAMPLES:BOOL=OFF

//Build Shared Libraries
OPENEXR_BUILD_SHARED_LIBS:BOOL=OFF

//Build OpenEXR tests?
OPENEXR_BUILD_TESTS:BOOL=OFF

//Build OpenEXR utilities?
OPENEXR_BUILD_UTILS:BOOL=OFF

//Install OpenEXR examples?
OPENEXR_INSTALL_DOCS:BOOL=OFF

//Install OpenEXR examples?
OPENEXR_INSTALL_EXAMPLES:BOOL=OFF

OPENEXR_INSTALL_HEADER_DEST:STRING=include/OpenEXR

OPENEXR_INSTALL_LIB_DEST:STRING=lib

//Use Namespace Versioning
OPENEXR_NAMESPACE_VERSIONING:BOOL=OFF

//Use ZLib Win API
OPENEXR_USE_ZLIB_WINAPI:BOOL=OFF

//Build TBB shared library
TBB_BUILD_SHARED:BOOL=OFF

//Build TBB static library
TBB_BUILD_STATIC:BOOL=ON

//Build TBB malloc library
TBB_BUILD_TBBMALLOC:BOOL=OFF

//Build TBB malloc proxy library
TBB_BUILD_TBBMALLOC_PROXY:BOOL=OFF

//Build TBB tests and enable testing infrastructure
TBB_BUILD_TESTS:BOOL=OFF

//Is this a continuous integration build?
TBB_CI_BUILD:BOOL=OFF

//First time that TBB was configured
TBB_CONFIG_DATE:STRING=2021/04/22 周四

//Do not save the configure date in the version string
TBB_NO_DATE:BOOL=OFF

//Use MSVC runtime library DLL
USE_MSVC_RUNTIME_LIBRARY_DLL:BOOL=ON

//Enable building amd64 assembly implementation
ZLIB_BUILD_AMD64:BOOL=OFF

//Enable building i686 assembly implementation
ZLIB_BUILD_ASM686:BOOL=OFF

//Enable building zlib examples
ZLIB_BUILD_EXAMPLES:BOOL=OFF

//Enable building zlib shared libraries
ZLIB_BUILD_SHARED_LIBS:BOOL=ON

//Enable building zlib static libraries
ZLIB_BUILD_STATIC_LIBS:BOOL=OFF

// 
ZLIB_INCLUDE_DIR:PATH=F:/GAMES202/Assignment2/prt/ext/openexr/zlib;F:/GAMES202/Assignment2/prt/build/ext_build/openexr/zlib

// 
ZLIB_LIBRARIES:FILEPATH=zlib

// 
ZLIB_LIBRARY:FILEPATH=F:/GAMES202/Assignment2/prt/build/ext_build/zlib/$<CONFIGURATION>/zlibstatic.lib

//Value Computed by CMake
ilmbase_BINARY_DIR:STATIC=F:/GAMES202/Assignment2/prt/build/ext_build/openexr/IlmBase

//Value Computed by CMake
ilmbase_SOURCE_DIR:STATIC=F:/GAMES202/Assignment2/prt/ext/openexr/IlmBase

//Value Computed by CMake
nanogui_BINARY_DIR:STATIC=F:/GAMES202/Assignment2/prt/build/ext_build/nanogui

//Value Computed by CMake
nanogui_SOURCE_DIR:STATIC=F:/GAMES202/Assignment2/prt/ext/nanogui

//Value Computed by CMake
nori_BINARY_DIR:STATIC=F:/GAMES202/Assignment2/prt/build

//Value Computed by CMake
nori_SOURCE_DIR:STATIC=F:/GAMES202/Assignment2/prt

//Value Computed by CMake
openexr_BINARY_DIR:STATIC=F:/GAMES202/Assignment2/prt/build/ext_build/openexr/OpenEXR

//Value Computed by CMake
openexr_SOURCE_DIR:STATIC=F:/GAMES202/Assignment2/prt/ext/openexr/OpenEXR

//Value Computed by CMake
tbb_BINARY_DIR:STATIC=F:/GAMES202/Assignment2/prt/build/ext_build/tbb

//Value Computed by CMake
tbb_SOURCE_DIR:STATIC=F:/GAMES202/Assignment2/prt/ext/tbb

//Value Computed by CMake
zlib_BINARY_DIR:STATIC=F:/GAMES202/Assignment2/prt/build/ext_build/openexr/zlib

//Value Computed by CMake
zlib_SOURCE_DIR:STATIC=F:/GAMES202/Assignment2/prt/ext/openexr/zlib


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BUILD_SHARED_LIBS
BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_COMPILER
CMAKE_ASM_MASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_MASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS
CMAKE_ASM_MASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_DEBUG
CMAKE_ASM_MASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_MINSIZEREL
CMAKE_ASM_MASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELEASE
CMAKE_ASM_MASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=f:/GAMES202/Assignment2/prt/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=15
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=5
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=D:/cmake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=D:/cmake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=D:/cmake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 16 2019
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=x64
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=F:/GAMES202/Assignment2/prt
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=17
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=D:/cmake/share/cmake-3.15
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_7Z
CPACK_BINARY_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NUGET
CPACK_BINARY_NUGET-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_WIX
CPACK_BINARY_WIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_ZIP
CPACK_BINARY_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GLFW_BUILD_DOCS
GLFW_BUILD_DOCS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GLFW_BUILD_EXAMPLES
GLFW_BUILD_EXAMPLES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GLFW_BUILD_INSTALL
GLFW_BUILD_INSTALL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GLFW_BUILD_TESTS
GLFW_BUILD_TESTS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GLFW_INSTALL
GLFW_INSTALL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GLFW_USE_CHDIR
GLFW_USE_CHDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GLFW_VULKAN_STATIC
GLFW_VULKAN_STATIC-ADVANCED:INTERNAL=1
//Have function fseeko
HAVE_FSEEKO:INTERNAL=
//Test HAVE_GCC_INLINE_ASM_AVX
HAVE_GCC_INLINE_ASM_AVX:INTERNAL=
//Result of TRY_COMPILE
HAVE_OFF64_T:INTERNAL=FALSE
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Test HAVE_SYSCONF_NPROCESSORS_ONLN
HAVE_SYSCONF_NPROCESSORS_ONLN:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//STRINGS property for variable: NANOGUI_BACKEND
NANOGUI_BACKEND-STRINGS:INTERNAL=OpenGL;GLES 2;GLES 3;Metal
//CHECK_TYPE_SIZE: off64_t unknown
OFF64_T:INTERNAL=
//Test SUPPORTS_VOLATILE_FLAG
SUPPORTS_VOLATILE_FLAG:INTERNAL=1
//ADVANCED property for variable: USE_MSVC_RUNTIME_LIBRARY_DLL
USE_MSVC_RUNTIME_LIBRARY_DLL-ADVANCED:INTERNAL=1
//Have include unistd.h
Z_HAVE_UNISTD_H:INTERNAL=
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=C:/Program Files (x86)/nori

